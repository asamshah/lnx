<!-- /snippets/product-grid-item-content.liquid -->

{% comment %}
  A grid item for products used in collection grid view

  * product {object} - The current product
  * show_variants â€“ Whether to show the variants in the grid item

  {% render 'product-grid-item', product: product, show_variants: true %}
{% endcomment %}

{%- liquid

assign on_sale = false
if product.compare_at_price > product.price
  assign on_sale = true
endif

assign sold_out = true
if product.available
  assign sold_out = false
endif

comment
  Siblings are a collection metafield called theme.siblings
endcomment
assign sibs_collection = nil
assign has_siblings = false
if settings.show_siblings and product.metafields.custom.parent_collection.value != blank
  assign has_siblings = true
  assign sibs_collection = product.metafields.custom.parent_collection.value
endif

comment
  Swatches are generated by matching a list of comma separated translations
endcomment
assign swatch_option = nil
assign has_swatches = false
if settings.swatches_enable and settings.swatches_collection_enable
  assign swatch_translation = 'general.swatches.color' | t
  assign swatch_labels = swatch_translation | append: ',' | split: ','
  for label in swatch_labels
    assign sanitized_label = label | lstrip | rstrip
    if product.options_by_name[sanitized_label].values.size > 0
      assign has_swatches = true
      assign swatch_option = product.options_by_name[sanitized_label]
      break
    endif
  endfor
endif

comment
  A button that will add to cart immediately: product with only one default variant or a product with color swatches and no other variants
endcomment
assign instant_add_button = nil

if settings.instant_add_enable
  if product.variants.size == 1
    assign instant_add_button = true
  elsif has_swatches and product.options.size == 1
    assign instant_add_button = true
  endif
endif

comment
  A quick add button that will show short variants like 'size' inside the button.
endcomment
assign inline_variant_buttons = nil

comment
  Get the non color option
  swatch_option.position -> 1 is off by one, it means product.options[0]
  In case of siblings, the inline option buttons always use the first option
endcomment
if settings.instant_add_enable
  if product.options.size == 1
    assign inline_variant_buttons = product.options_with_values[0]
  elsif has_swatches and product.options.size == 2
    if swatch_option.position == 1
      assign inline_variant_buttons = product.options_with_values[1]
    else
      assign inline_variant_buttons = product.options_with_values[0]
    endif
  endif
endif


comment
  Capture the swatch link markup so we only have filter product.variants by color one time
endcomment
assign swatch_link_markup = ''

comment
  Pass pre-filtered color variants into content, because the logic needs to know about
  swatch option positions and swatches need to use the where filter to get the list
endcomment
assign inline_variants = nil

-%}

<product-grid-item class="product-grid-item" data-show-variants="{{ show_variants }}">

  {% if has_swatches %}
    {%- for color_swatch_name in swatch_option.values -%}
      {%- assign swatch_position_key = 'option' | append: swatch_option.position -%}
      {%- assign this_color_variants = product.variants | where: swatch_position_key, color_swatch_name -%}
      {%- assign in_stock_options = this_color_variants | where: 'available' %}
      {%- assign swatch_first_variant = this_color_variants | first -%}
      {% assign visible = false %}
      {% if forloop.index0 == 0 %}
        {% assign visible = true %}
      {% endif %}
      {%- if inline_variant_buttons -%}
        {%- assign inline_variants = this_color_variants -%}
      {%- endif -%}

      {% render 'product-grid-item-content',
        product: product,
        variant: swatch_first_variant,
        badge_string: badge_string,
        visible: visible,
        instant_add_button: instant_add_button,
        inline_variant_buttons: inline_variant_buttons,
        inline_variants: inline_variants
      %}
    {% capture swatch_link_markup %}
      {{ swatch_link_markup }}
      <radio-swatch class="swatch__button{% if in_stock_options.size == 0 %} sold-out{% endif %}">
        <a
          href="{{ swatch_first_variant.url }}"
          class="swatch__label"
          data-grid-item-variant="{{ swatch_first_variant.id }}"
          data-swatch="{{ color_swatch_name }}"
          data-swatch-variant="{{ swatch_first_variant.id }}"
          {% if swatch_first_variant.id == product.variants[0].id %}aria-current="true"{%- endif -%}
          {% if swatch_first_variant.featured_media %}data-swatch-image="{{ swatch_first_variant.featured_media.preview_image.src }}"{% endif %}
          {% if swatch_first_variant.featured_media %}data-swatch-image-id="{{ swatch_first_variant.featured_media.id }}"{% endif %}
          data-swatch-index="{{ forloop.index0 }}"
        >
          <span class="visually-hidden">{{ color_swatch_name }}</span>
        </a>
      </radio-swatch>
      {% endcapture %}

    {% endfor %}
  {% else %}
    {%- if inline_variant_buttons -%}
      {%- assign inline_variants = product.variants -%}
    {%- endif -%}
    {% render 'product-grid-item-content',
      product: product,
      variant: product.variants[0],
      badge_string: badge_string,
      visible: true,
      instant_add_button: instant_add_button,
      inline_variant_buttons: inline_variant_buttons,
      inline_variants: inline_variants
    %}
  {% endif %}

  <div class="product__grid__info {{ text_align | default: settings.collection_text_alignment | default: 'text-center' }}">
    
    {% if has_siblings and sibs_collection.products.size > 0 %}
      <div class="product-grid-item__siblings product-grid-item__siblings--{{ product.id}} flex f-wrap">
        {%- for sib_product in sibs_collection.products limit: 4 -%}
          {%- assign modifier_class = '' -%}
          {%- if sib_product.available == false -%}
            {%- assign modifier_class = modifier_class | append: ' siblings__link--sold-out' -%}
          {%- endif -%}
          {%- assign title_safe = sib_product.title | strip_html | escape -%}
          {%- assign color_name = sib_product.metafields.theme.cutline.value | default: sib_product.title | split: '/' | last | remove: '/' | strip -%}

          <a
            href="{{ sib_product.url }}"
            class="siblings__link {{ modifier_class }}"
            data-swapper-hover="{{ color_name }}"
            {% if sib_product.handle == product.handle %}aria-current="true"{%- endif -%}
          >
            <div class="siblings__swatch">
              <div class="sibling__image">{%- render 'image-fill', img_object: sib_product.featured_media.preview_image, aspect_ratio: 1.0 -%}</div>
            </div>
            <span class="visually-hidden">{{ color_name }}</span>
          </a>
        {%- endfor -%}

        {% if sibs_collection.products.size > 4 %}
          <div class="siblings__link--more flex f-a-center f-j-center" data-class-change='[
            {
              "target": ".product-grid-item__siblings--{{ product.id}} .siblings__link--more",
              "class": "hide",
              "method": "add",
              "resizeWindow": true,
              "on": "click"
            },
            {
              "target": ".product-grid-item__siblings--{{ product.id}} .siblings__link",
              "class": "hide",
              "method": "remove",
              "on": "click"
            }
          ]'>
            <span>+{{ sibs_collection.products.size | minus: 4 }}</span>
          </div>
        {% endif %}

        {%- for sib_product in sibs_collection.products limit: 50 -%}
          {% if forloop.index < 5 %}
            {% continue %}
          {% endif %}

          {%- assign modifier_class = '' -%}
          {%- if sib_product.available == false -%}
            {%- assign modifier_class = modifier_class | append: ' siblings__link--sold-out' -%}
          {%- endif -%}
          {%- assign title_safe = sib_product.title | strip_html | escape -%}
          {%- assign color_name = sib_product.metafields.theme.cutline.value | default: sib_product.title | split: '/' | last | remove: '/' | strip -%}

          <a
            href="{{ sib_product.url }}"
            class="siblings__link {{ modifier_class }} hide"
            data-swapper-hover="{{ color_name }}"
            {% if sib_product.handle == product.handle %}aria-current="true"{%- endif -%}
          >
            <div class="siblings__swatch">
              <div class="sibling__image">{%- render 'image-fill', img_object: sib_product.featured_media.preview_image, aspect_ratio: 1.0 -%}</div>
            </div>
            <span class="visually-hidden">{{ color_name }}</span>
          </a>
        {%- endfor -%}

      </div>
    {% endif %}

    <a href="{{ product.url | within: collection | capitalize }}" data-grid-link aria-label="{{ product.title | strip_html | escape }}">
      <p class="visually-hidden">{{ product.title | strip_html | escape }}</p>
 
      <div class="product__grid__info--internal">
        <div class="product__grid__title__wrapper">
          {% liquid
            if product.title contains "//"
              assign product_title_parts = product.title | split: "//"
              assign product_title_name = product_title_parts[0]
              assign product_title_color = product_title_parts[1]
            elsif product.title contains "/"
              assign product_title_parts = product.title | split: "/"
              assign product_title_name = product_title_parts[0]
              assign product_title_color = product_title_parts[1]
            endif
          %}
          <div class="product__grid__info--internal--border">
            <p class="product__grid__title">
              {% if product_title_name %}
                {{ product_title_name | strip_html | escape }}
              {% else %}
                {{ product.title | strip_html | escape }}
              {% endif %}
            </p>
          </div>
          {% if product_title_color %}
          <div class="product__grid__info--internal--border">
            <p class="product__grid__colour">
              {{ product_title_color | strip_html | escape }}
            </p>
          </div>
          {% endif %}
        </div>
      </div>
    </a>
        
    {% if product.title contains '//' or product.title contains '/' %}
      {% if show_variants %}
        <div class="product__grid__variants">
          {% render 'product-variant-sizes', product: product %}
        </div>
      {% endif %}
    {% endif %}

    <div class="product__grid__price product__grid__info--internal--border product__grid__info--internal--border__last {% if has_siblings %} product__grid__price--nowrap{% endif %}">
      <div class="product__grid__price--price">
        {% if on_sale %}
          <span class="compare-at">
            {%- if settings.currency_code_enable -%}
              {{ product.compare_at_price | money_with_currency }}
            {%- else -%}
              {{ product.compare_at_price | money_without_trailing_zeros }}
            {%- endif -%}
          </span>
        {% endif %}
        <span class="price{% if on_sale %} on-sale{% endif %}">
          {% if product.price_varies %}{{ 'products.general.from' | t }} {% endif %}
          {%- if settings.currency_code_enable -%}
            {{ product.price | money_with_currency }}
          {%- else -%}
            {{ product.price | money_without_trailing_zeros }}
          {%- endif -%}
        </span>
      </div>
      {%- if settings.product_grid_show_rating -%}
        <div class="ruk_rating_snippet" data-sku="{{ product.handle }};{{ product.variants | map: 'sku' | join: ';' }};{{ product.variants | map: 'id' | join: ';' }}"></div>
      {%- endif -%}


      {% if variant.unit_price %}
        {% capture unit_price_separator %}
          <span aria-hidden="true">/</span><span class="visually-hidden">{{ 'general.accessibility.unit_price_separator' | t }}&nbsp;</span>
        {% endcapture %}
        {% capture unit_price_base_unit %}
          {% if variant.unit_price_measurement.reference_value != 1 %}
            {{ variant.unit_price_measurement.reference_value }}
          {% endif %}
          {{ variant.unit_price_measurement.reference_unit }}
        {% endcapture %}
        <p class="product__grid__price__unit">
          <span class="visually-hidden">{{ 'products.product.unit_price_label' | t }}</span>
          <span class="price-per-unit">
            {%- if settings.currency_code_enable -%}
              {{ variant.unit_price | money_with_currency }}
            {%- else -%}
              {{ variant.unit_price | money_without_trailing_zeros }}
            {%- endif -%}
            {{ unit_price_separator }}{{ unit_price_base_unit }}
          </span>
        </p>
      {% endif %}

      {% comment %}
        Not required with labels ac-c
        {% if sold_out %}
        <p class="product__grid__price__sold">
          <em>{{ 'products.product.sold_out' | t }}</em>
        </p>
      {% endif %}
      {% endcomment %}
    </div>

    {% comment %}
    {%- if has_siblings -%}
      {%- assign sibs_collection = product.metafields.custom.parent_collection.value -%}
      {% if sibs_collection != blank %}
        <div class="product__grid__sibs">
          <div class="grid__swatch__container">
            <p class="grid__swatch__placeholder caps">{{ 'collections.general.swatches_with_count' | t: count: sibs_collection.products_count }}</p>
            <div class="grid__swatch__hover">
              <div class="sibs__slider">
                <div class="sibs__inner" data-sibling-inner data-scrollbar data-scrollbar-slider>
                  {%- for sib_product in sibs_collection.products limit: 50 -%}
                    <div class="siblings__link__holder {% if sib_product.available == false %} sold-out{% endif %}">
                      <a
                        href="{{ sib_product.variants[0].url }}"
                        class="siblings__link"
                        data-grid-item-variant="{{ sib_product.variants[0].id }}"
                        {% if sib_product.handle == product.handle %}aria-current="true"{%- endif -%}
                      >
                        <div class="siblings__swatch">
                          <div class="sibling__image">{%- render 'image-fill', img_object: sib_product.featured_media.preview_image, aspect_ratio: 1.0 -%}</div>
                        </div>
                      </a>
                    </div>
                  {%- endfor -%}
                </div>
                <button type="button" class="tabs__arrow tabs__arrow--prev is-hidden" data-scrollbar-arrow-prev>
                  <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
                </button>
                <button type="button" class="tabs__arrow tabs__arrow--next is-hidden" data-scrollbar-arrow-next>
                  <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
                </button>
              </div>
            </div>
          </div>
        </div>
      {% endif %}
    {%- elsif has_swatches and swatch_link_markup != '' -%}

      <div class="grid__swatch__container">
        <p class="grid__swatch__placeholder caps">{{ 'collections.general.swatches_with_count' | t: count: swatch_option.values.size }}</p>
        <div class="grid__swatch__hover" data-swatch-handle="{{ product.handle }}" data-swatch-label="{{ label }}" data-sibling-inner data-scrollbar data-scrollbar-slider>

          {{ swatch_link_markup }}

        </div>

        <button type="button" class="tabs__arrow tabs__arrow--prev is-hidden" data-scrollbar-arrow-prev>
          <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
        </button>

        <button type="button" class="tabs__arrow tabs__arrow--next is-hidden" data-scrollbar-arrow-next>
          <span class="visually-hidden">{{ 'general.accessibility.see_all' | t }}</span>
        </button>
      </div>
    {%- endif -%}
    {% endcomment %}

    {% render 'preorder-now-collection-item', product: product %}
    <!-- **BEGIN** Hextom USB Integration // Collection Include - DO NOT MODIFY -->
    {% render 'hextom_usb_coll', product: product %}
    <!-- **END** Hextom USB Integration // Collection Include - DO NOT MODIFY -->

  </div>
</product-grid-item>
